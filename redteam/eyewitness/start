#!/bin/bash

if test "f$1" "=" "f"
then 
    echo "Error, please specify a JobID"
    exit 1
fi
. /opt/asf/tools/scripts/arguments eyewitness $1
DATE_STAMP=`date +"%Y%m%d%H%M%S"`
JOB_FOLDERS="/home/asf/jobs"
JOB_FOLDER="$JOB_FOLDERS/$1"
JOB_OUTPUT_FOLDER="$JOB_FOLDER/$DATE_STAMP"
TERM="xterm"
if ! test -e "$JOB_FOLDER"
then 
    echo "Error, JobID $1 is invalid"
    exit 1
fi
if test -e "JOB_FOLDER/.lock"
then 
	echo "Error, process is already running"
	exit 1
fi
echo > "$JOB_FOLDER/.lock"
cd /opt/asf/frontend/asfui
. bin/activate
python3 manage.py remaster_input --input JobID:$1 --parser url --output "$JOB_FOLDER/app.input"
mkdir -p $JOB_OUTPUT_FOLDER
for mode in input asf
do cp -v "$JOB_FOLDER/app.$mode" "$JOB_OUTPUT_FOLDER/app.$mode"
done 
echo docker run --rm -v $JOB_OUTPUT_FOLDER/:/tmp/EyeWitness/ m4ch1n3s/eyewitness --web --timeout 120 -f /tmp/EyeWitness/app.input --results 300 --no-prompt 2>&1 \> "$JOB_OUTPUT_FOLDER/app.log"
docker run --rm -v $JOB_OUTPUT_FOLDER/:/tmp/EyeWitness/ m4ch1n3s/eyewitness --web --timeout 120 -f /tmp/EyeWitness/app.input --results 300 --no-prompt 2>&1 > "$JOB_OUTPUT_FOLDER/app.log" &
JOB_PID=$!
echo $JOB_PID>"$JOB_FOLDER/pid"
/opt/asf/redteam/eyewitness/extract_pics_mon.sh "$JOB_OUTPUT_FOLDER" "$JOB_FOLDER/pid" & 
wait $JOB_PID
/opt/asf/redteam/eyewitness/extract_pics.sh "$JOB_OUTPUT_FOLDER" 
rm -v "$JOB_FOLDER/pid"
rm -v "$JOB_FOLDER/.lock"