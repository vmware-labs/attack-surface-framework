# English translations for xmlschema package.
# Copyright (C) 2022 , 2016, SISSA (International School for Advanced Studies).
# This file is distributed under the same license as the xmlschema package.
# Davide Brunato <brunato@sissa.it>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: xmlschema\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-12 17:25+0200\n"
"PO-Revision-Date: 2022-05-12 17:30+0200\n"
"Last-Translator: Davide Brunato <brunato@sissa.it>\n"
"Language-Team: English\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: xmlschema/validators/complex_types.py:134
msgid "missing attribute 'name' in a global complexType"
msgstr "missing attribute 'name' in a global complexType"

#: xmlschema/validators/complex_types.py:139
msgid "attribute 'name' not allowed in a local complexType"
msgstr "attribute 'name' not allowed in a local complexType"

#: xmlschema/validators/complex_types.py:162
msgid "'mixed' attribute not allowed with simpleContent"
msgstr "'mixed' attribute not allowed with simpleContent"

#: xmlschema/validators/complex_types.py:177
#, python-format
msgid "unexpected tag %r after simpleContent declaration:"
msgstr "unexpected tag %r after simpleContent declaration:"

#: xmlschema/validators/complex_types.py:188
msgid ""
"value of 'mixed' attribute in complexType and complexContent must be the same"
msgstr ""
"value of 'mixed' attribute in complexType and complexContent must be the same"

#: xmlschema/validators/complex_types.py:208
#, python-format
msgid "unexpected tag %r after complexContent declaration"
msgstr "unexpected tag %r after complexContent declaration"

#: xmlschema/validators/complex_types.py:232
#, python-format
msgid "unexpected tag %r for complexType content"
msgstr "unexpected tag %r for complexType content"

#: xmlschema/validators/complex_types.py:240
#: xmlschema/validators/simple_types.py:1227
msgid "wrong definition with self-reference"
msgstr "wrong definition with self-reference"

#: xmlschema/validators/complex_types.py:243
#: xmlschema/validators/simple_types.py:1234
msgid "wrong redefinition without self-reference"
msgstr "wrong redefinition without self-reference"

#: xmlschema/validators/complex_types.py:254
msgid "restriction or extension tag expected"
msgstr "restriction or extension tag expected"

#: xmlschema/validators/complex_types.py:261
msgid "{!r} is expected to have a redefined/overridden component"
msgstr "{!r} is expected to have a redefined/overridden component"

#: xmlschema/validators/complex_types.py:266
msgid "{0!r} derivation not allowed for {1!r}"
msgstr "{0!r} derivation not allowed for {1!r}"

#: xmlschema/validators/complex_types.py:276
msgid "'base' attribute required"
msgstr "'base' attribute required"

#: xmlschema/validators/complex_types.py:285
#, python-format
msgid "missing base type %r"
msgstr "missing base type %r"

#: xmlschema/validators/complex_types.py:293
#: xmlschema/validators/simple_types.py:1247
msgid "circular definition found between {0!r} and {1!r}"
msgstr "circular definition found between {0!r} and {1!r}"

#: xmlschema/validators/complex_types.py:297
#: xmlschema/validators/complex_types.py:311
msgid "a complexType ancestor required: {!r}"
msgstr "a complexType ancestor required: {!r}"

#: xmlschema/validators/complex_types.py:302
#, python-format
msgid "derivation by %r blocked by attribute 'final' in base type"
msgstr "derivation by %r blocked by attribute 'final' in base type"

#: xmlschema/validators/complex_types.py:319
msgid "a not empty simpleContent cannot restrict an empty content type"
msgstr "a not empty simpleContent cannot restrict an empty content type"

#: xmlschema/validators/complex_types.py:326
msgid "content type is not a restriction of base content"
msgstr "content type is not a restriction of base content"

#: xmlschema/validators/complex_types.py:332
msgid "with simpleContent cannot restrict an element-only content type"
msgstr "with simpleContent cannot restrict an element-only content type"

#: xmlschema/validators/complex_types.py:344 xmlschema/validators/groups.py:478
#, python-format
msgid "unexpected tag %r"
msgstr "unexpected tag %r"

#: xmlschema/validators/complex_types.py:354
#, python-format
msgid "base type %r has no simple content"
msgstr "base type %r has no simple content"

#: xmlschema/validators/complex_types.py:362
msgid "the base type is not derivable by restriction"
msgstr "the base type is not derivable by restriction"

#: xmlschema/validators/complex_types.py:365
#: xmlschema/validators/complex_types.py:458
#: xmlschema/validators/complex_types.py:896
#, python-format
msgid "base %r is simple or has a simple content"
msgstr "base %r is simple or has a simple content"

#: xmlschema/validators/complex_types.py:377
#, python-brace-format
msgid ""
"restriction of an xs:{0} with more than one particle with xs:{1} is forbidden"
msgstr ""
"restriction of an xs:{0} with more than one particle with xs:{1} is forbidden"

#: xmlschema/validators/complex_types.py:389
msgid "derived a mixed content from a base type that has element-only content"
msgstr "derived a mixed content from a base type that has element-only content"

#: xmlschema/validators/complex_types.py:392
msgid "an empty content derivation from base type that has not empty content"
msgstr "an empty content derivation from base type that has not empty content"

#: xmlschema/validators/complex_types.py:403
msgid "{0!r} is not a restriction of the base type {1!r}"
msgstr "{0!r} is not a restriction of the base type {1!r}"

#: xmlschema/validators/complex_types.py:412
#: xmlschema/validators/complex_types.py:901
msgid "the base type is not derivable by extension"
msgstr "the base type is not derivable by extension"

#: xmlschema/validators/complex_types.py:445
#: xmlschema/validators/complex_types.py:952
#: xmlschema/validators/complex_types.py:1002
#, python-format
msgid ""
"base has a different content type (mixed=%r) and the extension group is not "
"empty."
msgstr ""
"base has a different content type (mixed=%r) and the extension group is not "
"empty."

#: xmlschema/validators/complex_types.py:465
msgid "cannot extend a complex content with xs:all"
msgstr "cannot extend a complex content with xs:all"

#: xmlschema/validators/complex_types.py:468
msgid "xs:sequence cannot extend xs:all"
msgstr "xs:sequence cannot extend xs:all"

#: xmlschema/validators/complex_types.py:478
msgid "XSD 1.0 does not allow extension of a not empty 'all' model group"
msgstr "XSD 1.0 does not allow extension of a not empty 'all' model group"

#: xmlschema/validators/complex_types.py:481
#, python-format
msgid ""
"base has a different content type (mixed=%r) and the extension group is not "
"empty"
msgstr ""
"base has a different content type (mixed=%r) and the extension group is not "
"empty"

#: xmlschema/validators/complex_types.py:495
#: xmlschema/validators/complex_types.py:1017
msgid "extended type has a mixed content but the base is element-only"
msgstr "extended type has a mixed content but the base is element-only"

#: xmlschema/validators/complex_types.py:655
msgid "global type {!r} is not built"
msgstr "global type {!r} is not built"

#: xmlschema/validators/complex_types.py:721
#: xmlschema/validators/complex_types.py:746
#, python-format
msgid "cannot decode %(obj)r data with %(decoder)r"
msgstr "cannot decode %(obj)r data with %(decoder)r"

#: xmlschema/validators/complex_types.py:847
msgid "the simple content of {!r} is not a valid simple type in XSD 1.1"
msgstr "the simple content of {!r} is not a valid simple type in XSD 1.1"

#: xmlschema/validators/complex_types.py:854
msgid "openContent mismatch between type and model group"
msgstr "openContent mismatch between type and model group"

#: xmlschema/validators/complex_types.py:869
#, python-format
msgid "attribute %r must be inheritable"
msgstr "attribute %r must be inheritable"

#: xmlschema/validators/complex_types.py:885
msgid "default attribute {!r} is already declared in the complex type"
msgstr "default attribute {!r} is already declared in the complex type"

#: xmlschema/validators/complex_types.py:956
msgid "cannot extend an empty mixed content with an xs:all"
msgstr "cannot extend an empty mixed content with an xs:all"

#: xmlschema/validators/complex_types.py:974
#, python-format
msgid "xs:all cannot extend a not empty xs:%s"
msgstr "xs:all cannot extend a not empty xs:%s"

#: xmlschema/validators/complex_types.py:989
msgid "cannot extend a not empty 'all' model group with a different model"
msgstr "cannot extend a not empty 'all' model group with a different model"

#: xmlschema/validators/complex_types.py:992
msgid "when extend an xs:all group minOccurs must be the same"
msgstr "when extend an xs:all group minOccurs must be the same"

#: xmlschema/validators/complex_types.py:995
msgid "cannot extend an xs:all group with mixed empty content"
msgstr "cannot extend an xs:all group with mixed empty content"

#: xmlschema/validators/complex_types.py:1035
msgid "{0!r} is not an extension of the base type {1!r}"
msgstr "{0!r} is not an extension of the base type {1!r}"

#: xmlschema/validators/notations.py:39
msgid "a notation declaration must be global"
msgstr "a notation declaration must be global"

#: xmlschema/validators/notations.py:43
msgid "a notation must have a 'name' attribute"
msgstr "a notation must have a 'name' attribute"

#: xmlschema/validators/notations.py:46
msgid "a notation must have a 'public' or a 'system' attribute"
msgstr "a notation must have a 'public' or a 'system' attribute"

#: xmlschema/validators/particles.py:122
msgid "minOccurs value is not an integer value"
msgstr "minOccurs value is not an integer value"

#: xmlschema/validators/particles.py:126
msgid "minOccurs value must be a non negative integer"
msgstr "minOccurs value must be a non negative integer"

#: xmlschema/validators/particles.py:134
msgid "minOccurs must be lesser or equal than maxOccurs"
msgstr "minOccurs must be lesser or equal than maxOccurs"

#: xmlschema/validators/particles.py:142
msgid "maxOccurs value must be a non negative integer or 'unbounded'"
msgstr "maxOccurs value must be a non negative integer or 'unbounded'"

#: xmlschema/validators/particles.py:146
msgid "maxOccurs must be 'unbounded' or greater than minOccurs"
msgstr "maxOccurs must be 'unbounded' or greater than minOccurs"

#: xmlschema/validators/assertions.py:76
msgid "base_type={!r} is not a complexType definition"
msgstr "base_type={!r} is not a complexType definition"

#: xmlschema/validators/elements.py:162
#, python-format
msgid "unknown element %r"
msgstr "unknown element %r"

#: xmlschema/validators/elements.py:179
msgid "attribute {!r} is not allowed when element reference is used"
msgstr "attribute {!r} is not allowed when element reference is used"

#: xmlschema/validators/elements.py:200
msgid "local scope elements cannot have abstract attribute"
msgstr "local scope elements cannot have abstract attribute"

#: xmlschema/validators/elements.py:227
msgid "attribute {!r} is not allowed in a global element declaration"
msgstr "attribute {!r} is not allowed in a global element declaration"

#: xmlschema/validators/elements.py:232
msgid "attribute {!r} not allowed in a local element declaration"
msgstr "attribute {!r} not allowed in a local element declaration"

#: xmlschema/validators/elements.py:250 xmlschema/validators/elements.py:1460
#: xmlschema/validators/simple_types.py:859
#: xmlschema/validators/simple_types.py:1024
#: xmlschema/validators/simple_types.py:1240
msgid "unknown type {!r}"
msgstr "unknown type {!r}"

#: xmlschema/validators/elements.py:255
msgid ""
"the attribute 'type' and a xs:{} local declaration are mutually exclusive"
msgstr ""
"the attribute 'type' and a xs:{} local declaration are mutually exclusive"

#: xmlschema/validators/elements.py:274 xmlschema/validators/attributes.py:165
msgid "'default' and 'fixed' attributes are mutually exclusive"
msgstr "'default' and 'fixed' attributes are mutually exclusive"

#: xmlschema/validators/elements.py:278
msgid "'default' value {!r} is not compatible with element's type"
msgstr "'default' value {!r} is not compatible with element's type"

#: xmlschema/validators/elements.py:282
msgid "xs:ID or a type derived from xs:ID cannot have a default value"
msgstr "xs:ID or a type derived from xs:ID cannot have a default value"

#: xmlschema/validators/elements.py:288
msgid "'fixed' value {!r} is not compatible with element's type"
msgstr "'fixed' value {!r} is not compatible with element's type"

#: xmlschema/validators/elements.py:292
msgid "xs:ID or a type derived from xs:ID cannot have a fixed value"
msgstr "xs:ID or a type derived from xs:ID cannot have a fixed value"

#: xmlschema/validators/elements.py:311 xmlschema/validators/elements.py:319
#, python-format
msgid "duplicated identity constraint %r:"
msgstr "duplicated identity constraint %r:"

#: xmlschema/validators/elements.py:341
#, python-format
msgid "unknown substitutionGroup %r"
msgstr "unknown substitutionGroup %r"

#: xmlschema/validators/elements.py:346
#, python-format
msgid "circularity found for substitutionGroup %r"
msgstr "circularity found for substitutionGroup %r"

#: xmlschema/validators/elements.py:361
msgid ""
"{0!r} type is not of the same or a derivation of the head element {1!r} type"
msgstr ""
"{0!r} type is not of the same or a derivation of the head element {1!r} type"

#: xmlschema/validators/elements.py:365
#, python-format
msgid ""
"head element %r can't be substituted by an element that has a derivation of "
"its type"
msgstr ""
"head element %r can't be substituted by an element that has a derivation of "
"its type"

#: xmlschema/validators/elements.py:369
#, python-format
msgid ""
"head element %r can't be substituted by an element that has an extension of "
"its type"
msgstr ""
"head element %r can't be substituted by an element that has an extension of "
"its type"

#: xmlschema/validators/elements.py:373
#, python-format
msgid ""
"head element %r can't be substituted by an element that has a restriction of "
"its type"
msgstr ""
"head element %r can't be substituted by an element that has a restriction of "
"its type"

#: xmlschema/validators/elements.py:547
msgid "schemaLocation declaration after namespace start"
msgstr "schemaLocation declaration after namespace start"

#: xmlschema/validators/elements.py:556
#, python-format
msgid "missing dynamic loaded schema from %s"
msgstr "missing dynamic loaded schema from %s"

#: xmlschema/validators/elements.py:559
msgid "dynamic loaded schema change the assessment"
msgstr "dynamic loaded schema change the assessment"

#: xmlschema/validators/elements.py:610
msgid "cannot use an abstract element for validation"
msgstr "cannot use an abstract element for validation"

#: xmlschema/validators/elements.py:667 xmlschema/validators/identities.py:219
msgid "selector xpath expression can only select elements"
msgstr "selector xpath expression can only select elements"

#: xmlschema/validators/elements.py:673
#, python-format
msgid "usage of %r is blocked"
msgstr "usage of %r is blocked"

#: xmlschema/validators/elements.py:677
#, python-format
msgid "%r is abstract"
msgstr "%r is abstract"

#: xmlschema/validators/elements.py:705
msgid "element is not nillable"
msgstr "element is not nillable"

#: xmlschema/validators/elements.py:708
msgid "xsi:nil attribute must have a boolean value"
msgstr "xsi:nil attribute must have a boolean value"

#: xmlschema/validators/elements.py:713
msgid "xsi:nil='true' but the element has a fixed value"
msgstr "xsi:nil='true' but the element has a fixed value"

#: xmlschema/validators/elements.py:716
msgid "xsi:nil='true' but the element is not empty"
msgstr "xsi:nil='true' but the element is not empty"

#: xmlschema/validators/elements.py:722
msgid "character data is not allowed because content is empty"
msgstr "character data is not allowed because content is empty"

#: xmlschema/validators/elements.py:744 xmlschema/validators/elements.py:760
#, python-format
msgid "must have the fixed value %r"
msgstr "must have the fixed value %r"

#: xmlschema/validators/elements.py:749
msgid "a simple content element can't have child elements"
msgstr "a simple content element can't have child elements"

#: xmlschema/validators/elements.py:778 xmlschema/validators/attributes.py:237
msgid ""
"cannot validate against xs:NOTATION directly, only against a subtype with an "
"enumeration facet"
msgstr ""
"cannot validate against xs:NOTATION directly, only against a subtype with an "
"enumeration facet"

#: xmlschema/validators/elements.py:782 xmlschema/validators/attributes.py:241
msgid "missing enumeration facet in xs:NOTATION subtype"
msgstr "missing enumeration facet in xs:NOTATION subtype"

#: xmlschema/validators/elements.py:1245
msgid "test attribute missing in non-final alternative"
msgstr "test attribute missing in non-final alternative"

#: xmlschema/validators/elements.py:1370
msgid "Maybe a not equivalent type table between elements {0!r} and {1!r}"
msgstr "Maybe a not equivalent type table between elements {0!r} and {1!r}"

#: xmlschema/validators/elements.py:1446
msgid "missing 'type' attribute"
msgstr "missing 'type' attribute"

#: xmlschema/validators/elements.py:1454
msgid "declared type is not derived from {!r}"
msgstr "declared type is not derived from {!r}"

#: xmlschema/validators/elements.py:1464
msgid "type {0!r} is not derived from {1!r}"
msgstr "type {0!r} is not derived from {1!r}"

#: xmlschema/validators/elements.py:1469
#, python-format
msgid ""
"the attribute 'type' and the xs:%s local declaration are mutually exclusive"
msgstr ""
"the attribute 'type' and the xs:%s local declaration are mutually exclusive"

#: xmlschema/validators/global_maps.py:77
msgid "global {0} with name={1!r} is already defined"
msgstr "global {0} with name={1!r} is already defined"

#: xmlschema/validators/global_maps.py:90
msgid "multiple redefinition for {0} {1!r}"
msgstr "multiple redefinition for {0} {1!r}"

#: xmlschema/validators/global_maps.py:102
msgid "circular redefinition for {0} {1!r}"
msgstr "circular redefinition for {0} {1!r}"

#: xmlschema/validators/global_maps.py:117
msgid "not a redefinition!"
msgstr "not a redefinition!"

#: xmlschema/validators/global_maps.py:234
msgid "wrong tag {!r} for an XSD global definition/declaration"
msgstr "wrong tag {!r} for an XSD global definition/declaration"

#: xmlschema/validators/global_maps.py:313
#: xmlschema/validators/global_maps.py:330
msgid "wrong element {0!r} for map {1!r}"
msgstr "wrong element {0!r} for map {1!r}"

#: xmlschema/validators/global_maps.py:339
msgid "redefined schema {!r} has a different targetNamespace"
msgstr "redefined schema {!r} has a different targetNamespace"

#: xmlschema/validators/global_maps.py:350
msgid "unexpected instance {!r} in global map"
msgstr "unexpected instance {!r} in global map"

#: xmlschema/validators/global_maps.py:382
msgid "{0!r} cannot substitute {1!r}"
msgstr "{0!r} cannot substitute {1!r}"

#: xmlschema/validators/global_maps.py:578
msgid "missing XSD namespace in meta-schema instance {!r}"
msgstr "missing XSD namespace in meta-schema instance {!r}"

#: xmlschema/validators/global_maps.py:587
msgid "missing default meta-schema instance {!r}"
msgstr "missing default meta-schema instance {!r}"

#: xmlschema/validators/global_maps.py:639
msgid "defaultAttributes={0!r} doesn't match any attribute group of {1!r}"
msgstr "defaultAttributes={0!r} doesn't match any attribute group of {1!r}"

#: xmlschema/validators/global_maps.py:682
msgid "global element not built!"
msgstr "global element not built!"

#: xmlschema/validators/global_maps.py:684
msgid "circularity found for substitution group with head element {}"
msgstr "circularity found for substitution group with head element {}"

#: xmlschema/validators/global_maps.py:689
#, python-format
msgid "global map has unbuilt components: %r"
msgstr "global map has unbuilt components: %r"

#: xmlschema/validators/global_maps.py:694
msgid "global group not built!"
msgstr "global group not built!"

#: xmlschema/validators/global_maps.py:701
msgid "the redefined group is an illegal restriction"
msgstr "the redefined group is an illegal restriction"

#: xmlschema/validators/global_maps.py:717
msgid "the derived group is an illegal restriction"
msgstr "the derived group is an illegal restriction"

#: xmlschema/validators/global_maps.py:727
msgid "restriction has an open content but base type has not"
msgstr "restriction has an open content but base type has not"

#: xmlschema/validators/global_maps.py:733
msgid ""
"can't verify the content model of {!r} due to exceeding of maximum recursion "
"depth"
msgstr ""
"can't verify the content model of {!r} due to exceeding of maximum recursion "
"depth"

#: xmlschema/validators/facets.py:63
msgid "invalid type {!r} provided"
msgstr "invalid type {!r} provided"

#: xmlschema/validators/facets.py:84
msgid "{0!r} facet value is fixed to {1!r}"
msgstr "{0!r} facet value is fixed to {1!r}"

#: xmlschema/validators/facets.py:135 xmlschema/validators/facets.py:138
msgid "facet value can be only 'collapse'"
msgstr "facet value can be only 'collapse'"

#: xmlschema/validators/facets.py:140
msgid "facet value can be only 'replace' or 'collapse'"
msgstr "facet value can be only 'replace' or 'collapse'"

#: xmlschema/validators/facets.py:145
msgid "value contains tabs or newlines"
msgstr "value contains tabs or newlines"

#: xmlschema/validators/facets.py:151
msgid "value contains non collapsed white spaces"
msgstr "value contains non collapsed white spaces"

#: xmlschema/validators/facets.py:175
msgid "base facet has a different length ({})"
msgstr "base facet has a different length ({})"

#: xmlschema/validators/facets.py:185
msgid "length has to be {!r}"
msgstr "length has to be {!r}"

#: xmlschema/validators/facets.py:209
msgid "base facet has a greater min length ({})"
msgstr "base facet has a greater min length ({})"

#: xmlschema/validators/facets.py:219
msgid "value length cannot be lesser than {!r}"
msgstr "value length cannot be lesser than {!r}"

#: xmlschema/validators/facets.py:243
msgid "base type has a lesser max length ({})"
msgstr "base type has a lesser max length ({})"

#: xmlschema/validators/facets.py:253
msgid "value length cannot be greater than {!r}"
msgstr "value length cannot be greater than {!r}"

#: xmlschema/validators/facets.py:276 xmlschema/validators/facets.py:307
#: xmlschema/validators/facets.py:342 xmlschema/validators/facets.py:373
msgid "invalid restriction: {}"
msgstr "invalid restriction: {}"

#: xmlschema/validators/facets.py:281
msgid "value has to be greater or equal than {!r}"
msgstr "value has to be greater or equal than {!r}"

#: xmlschema/validators/facets.py:311
msgid "invalid restriction: {} is also the maximum"
msgstr "invalid restriction: {} is also the maximum"

#: xmlschema/validators/facets.py:317
msgid "value has to be greater than {!r}"
msgstr "value has to be greater than {!r}"

#: xmlschema/validators/facets.py:347
msgid "value has to be less than or equal than {!r}"
msgstr "value has to be less than or equal than {!r}"

#: xmlschema/validators/facets.py:377
msgid "invalid restriction: {} is also the minimum"
msgstr "invalid restriction: {} is also the minimum"

#: xmlschema/validators/facets.py:383
msgid "value has to be lesser than {!r}"
msgstr "value has to be lesser than {!r}"

#: xmlschema/validators/facets.py:418 xmlschema/validators/facets.py:475
msgid "invalid restriction: base value is lower ({})"
msgstr "invalid restriction: base value is lower ({})"

#: xmlschema/validators/facets.py:428
msgid "the number of digits has to be lesser or equal than {!r}"
msgstr "the number of digits has to be lesser or equal than {!r}"

#: xmlschema/validators/facets.py:456
msgid ""
"fractionDigits facet can be applied only to types derived from xs:decimal"
msgstr ""
"fractionDigits facet can be applied only to types derived from xs:decimal"

#: xmlschema/validators/facets.py:470
msgid "fractionDigits facet value must be 0 for types derived from xs:integer"
msgstr "fractionDigits facet value must be 0 for types derived from xs:integer"

#: xmlschema/validators/facets.py:485
msgid "the number of fraction digits has to be lesser or equal than {!r}"
msgstr "the number of fraction digits has to be lesser or equal than {!r}"

#: xmlschema/validators/facets.py:517
msgid "invalid restriction from {!r}"
msgstr "invalid restriction from {!r}"

#: xmlschema/validators/facets.py:522
msgid "time zone required for value {!r}"
msgstr "time zone required for value {!r}"

#: xmlschema/validators/facets.py:527
msgid "time zone prohibited for value {!r}"
msgstr "time zone prohibited for value {!r}"

#: xmlschema/validators/facets.py:571
msgid "value {!r} must match a notation declaration"
msgstr "value {!r} must match a notation declaration"

#: xmlschema/validators/facets.py:629
msgid "value must be one of {!r}"
msgstr "value must be one of {!r}"

#: xmlschema/validators/facets.py:725
msgid "value doesn't match any pattern of {!r}"
msgstr "value doesn't match any pattern of {!r}"

#: xmlschema/validators/facets.py:789
msgid "missing attribute 'test'"
msgstr "missing attribute 'test'"

#: xmlschema/validators/facets.py:819
msgid "value is not true with test path {!r}"
msgstr "value is not true with test path {!r}"

#: xmlschema/validators/attributes.py:82
msgid "unknown attribute {!r}"
msgstr "unknown attribute {!r}"

#: xmlschema/validators/attributes.py:97
msgid "referenced attribute has a different fixed value {!r}"
msgstr "referenced attribute has a different fixed value {!r}"

#: xmlschema/validators/attributes.py:102
msgid "attribute {!r} is not allowed when attribute reference is used"
msgstr "attribute {!r} is not allowed when attribute reference is used"

#: xmlschema/validators/attributes.py:118
msgid "an attribute name must be different from 'xmlns'"
msgstr "an attribute name must be different from 'xmlns'"

#: xmlschema/validators/attributes.py:125
#, python-format
msgid "cannot add attributes in %r namespace"
msgstr "cannot add attributes in %r namespace"

#: xmlschema/validators/attributes.py:146
msgid "ambiguous type definition for XSD attribute"
msgstr "ambiguous type definition for XSD attribute"

#: xmlschema/validators/attributes.py:158
msgid "XSD attribute's type must be a simpleType"
msgstr "XSD attribute's type must be a simpleType"

#: xmlschema/validators/attributes.py:169
msgid ""
"the attribute 'use' must be 'optional' if the attribute 'default' is present"
msgstr ""
"the attribute 'use' must be 'optional' if the attribute 'default' is present"

#: xmlschema/validators/attributes.py:174
msgid "default value {!r} is not compatible with attribute's type"
msgstr "default value {!r} is not compatible with attribute's type"

#: xmlschema/validators/attributes.py:177
msgid "xs:ID key attributes cannot have a default value"
msgstr "xs:ID key attributes cannot have a default value"

#: xmlschema/validators/attributes.py:183
msgid "fixed value {!r} is not compatible with attribute's type"
msgstr "fixed value {!r} is not compatible with attribute's type"

#: xmlschema/validators/attributes.py:186
msgid "xs:ID key attributes cannot have a fixed value"
msgstr "xs:ID key attributes cannot have a fixed value"

#: xmlschema/validators/attributes.py:249
msgid "attribute {0!r} has a fixed value {1!r}"
msgstr "attribute {0!r} has a fixed value {1!r}"

#: xmlschema/validators/attributes.py:254
msgid "attribute {0}={1!r}: {2}"
msgstr "attribute {0}={1!r}: {2}"

#: xmlschema/validators/attributes.py:319
msgid "attribute 'fixed' with use=prohibited is not allowed in XSD 1.1"
msgstr "attribute 'fixed' with use=prohibited is not allowed in XSD 1.1"

#: xmlschema/validators/attributes.py:413
msgid "more anyAttribute declarations in the same attribute group"
msgstr "more anyAttribute declarations in the same attribute group"

#: xmlschema/validators/attributes.py:416
msgid "another declaration after anyAttribute"
msgstr "another declaration after anyAttribute"

#: xmlschema/validators/attributes.py:431
msgid "multiple declaration for attribute {!r}"
msgstr "multiple declaration for attribute {!r}"

#: xmlschema/validators/attributes.py:440
msgid "the attribute 'ref' is required in a local attributeGroup"
msgstr "the attribute 'ref' is required in a local attributeGroup"

#: xmlschema/validators/attributes.py:450
msgid "duplicated attributeGroup {!r}"
msgstr "duplicated attributeGroup {!r}"

#: xmlschema/validators/attributes.py:456
msgid "in a redefinition the reference to itself must be the first"
msgstr "in a redefinition the reference to itself must be the first"

#: xmlschema/validators/attributes.py:467
msgid "attributeGroup ref={!r} is not in the redefined group"
msgstr "attributeGroup ref={!r} is not in the redefined group"

#: xmlschema/validators/attributes.py:471
msgid "Circular attribute groups not allowed in XSD 1.0"
msgstr "Circular attribute groups not allowed in XSD 1.0"

#: xmlschema/validators/attributes.py:479
msgid "unknown attribute group {!r}"
msgstr "unknown attribute group {!r}"

#: xmlschema/validators/attributes.py:488
msgid "multiple declaration of attribute {!r}"
msgstr "multiple declaration of attribute {!r}"

#: xmlschema/validators/attributes.py:497
msgid "Circular reference found between attribute groups {0!r} and {1!r}"
msgstr "Circular reference found between attribute groups {0!r} and {1!r}"

#: xmlschema/validators/attributes.py:502
msgid "(attribute | attributeGroup) expected, found {!r}."
msgstr "(attribute | attributeGroup) expected, found {!r}."

#: xmlschema/validators/attributes.py:513
msgid "Unexpected attribute {!r} in restriction"
msgstr "Unexpected attribute {!r} in restriction"

#: xmlschema/validators/attributes.py:529
msgid "Attribute wildcard is not a restriction of the base wildcard"
msgstr "Attribute wildcard is not a restriction of the base wildcard"

#: xmlschema/validators/attributes.py:539
msgid "Attribute type is not a restriction of the base attribute type"
msgstr "Attribute type is not a restriction of the base attribute type"

#: xmlschema/validators/attributes.py:544
msgid "Attribute {!r}: unmatched attribute use in restriction"
msgstr "Attribute {!r}: unmatched attribute use in restriction"

#: xmlschema/validators/attributes.py:550
msgid "Attribute {!r}: derived attribute has a different fixed value"
msgstr "Attribute {!r}: derived attribute has a different fixed value"

#: xmlschema/validators/attributes.py:554
msgid "Attribute {!r}: 'inheritable' property change in restriction"
msgstr "Attribute {!r}: 'inheritable' property change in restriction"

#: xmlschema/validators/attributes.py:568
msgid "Missing required attribute {!r} in redefinition restriction"
msgstr "Missing required attribute {!r} in redefinition restriction"

#: xmlschema/validators/attributes.py:573
msgid "Attribute {!r}: unmatched attribute use in redefinition"
msgstr "Attribute {!r}: unmatched attribute use in redefinition"

#: xmlschema/validators/attributes.py:576
msgid "Attribute {!r}: redefinition remove fixed constraint"
msgstr "Attribute {!r}: redefinition remove fixed constraint"

#: xmlschema/validators/attributes.py:585
msgid "Redefinition restriction contains additional attribute {!r}"
msgstr "Redefinition restriction contains additional attribute {!r}"

#: xmlschema/validators/attributes.py:589
msgid "Wrong attribute order in redefinition restriction"
msgstr "Wrong attribute order in redefinition restriction"

#: xmlschema/validators/attributes.py:607
msgid "multiple ID attributes not allowed for XSD 1.0"
msgstr "multiple ID attributes not allowed for XSD 1.0"

#: xmlschema/validators/attributes.py:660
#: xmlschema/validators/attributes.py:738
msgid "missing required attribute {!r}"
msgstr "missing required attribute {!r}"

#: xmlschema/validators/attributes.py:695
#: xmlschema/validators/attributes.py:760
#, python-format
msgid "%r is not an attribute of the XSI namespace"
msgstr "%r is not an attribute of the XSI namespace"

#: xmlschema/validators/attributes.py:703
#: xmlschema/validators/attributes.py:768
#, python-format
msgid "%r attribute not allowed for element"
msgstr "%r attribute not allowed for element"

#: xmlschema/validators/attributes.py:709
#, python-format
msgid "use of attribute %r is prohibited"
msgstr "use of attribute %r is prohibited"

#: xmlschema/validators/exceptions.py:345
#, python-format
msgid "Unexpected child with tag %r at position %d."
msgstr "Unexpected child with tag %r at position %d."

#: xmlschema/validators/exceptions.py:372
#, python-format
msgid " Tag (%s) expected."
msgstr " Tag (%s) expected."

#: xmlschema/validators/exceptions.py:374
#, python-format
msgid " Tag %s expected."
msgstr " Tag %s expected."

#: xmlschema/validators/exceptions.py:376
#, python-format
msgid " Tag %r expected."
msgstr " Tag %r expected."

#: xmlschema/validators/groups.py:355
msgid "{!r} is not a particle of the model group"
msgstr "{!r} is not a particle of the model group"

#: xmlschema/validators/groups.py:413 xmlschema/validators/groups.py:455
msgid "attribute 'name' not allowed in a local group"
msgstr "attribute 'name' not allowed in a local group"

#: xmlschema/validators/groups.py:422
#, python-format
msgid "missing group %r"
msgstr "missing group %r"

#: xmlschema/validators/groups.py:429 xmlschema/validators/groups.py:485
msgid "maxOccurs must be 1 for 'all' model groups"
msgstr "maxOccurs must be 1 for 'all' model groups"

#: xmlschema/validators/groups.py:432 xmlschema/validators/groups.py:488
#: xmlschema/validators/groups.py:1285
msgid "minOccurs must be (0 | 1) for 'all' model groups"
msgstr "minOccurs must be (0 | 1) for 'all' model groups"

#: xmlschema/validators/groups.py:435
msgid "in XSD 1.0 an 'all' model group cannot be nested"
msgstr "in XSD 1.0 an 'all' model group cannot be nested"

#: xmlschema/validators/groups.py:441 xmlschema/validators/groups.py:523
#: xmlschema/validators/groups.py:1317
#, python-format
msgid "Circular definition detected for group %r"
msgstr "Circular definition detected for group %r"

#: xmlschema/validators/groups.py:459 xmlschema/validators/groups.py:469
msgid "attribute 'minOccurs' not allowed in a global group"
msgstr "attribute 'minOccurs' not allowed in a global group"

#: xmlschema/validators/groups.py:462 xmlschema/validators/groups.py:472
msgid "attribute 'maxOccurs' not allowed in a global group"
msgstr "attribute 'maxOccurs' not allowed in a global group"

#: xmlschema/validators/groups.py:499
msgid "'all' model can contain only elements"
msgstr "'all' model can contain only elements"

#: xmlschema/validators/groups.py:509 xmlschema/validators/groups.py:1301
msgid "missing attribute 'ref' in local group"
msgstr "missing attribute 'ref' in local group"

#: xmlschema/validators/groups.py:518
msgid "'all' model can appears only at 1st level of a model group"
msgstr "'all' model can appears only at 1st level of a model group"

#: xmlschema/validators/groups.py:527 xmlschema/validators/groups.py:1321
msgid "Redefined group reference cannot have minOccurs/maxOccurs other than 1"
msgstr "Redefined group reference cannot have minOccurs/maxOccurs other than 1"

#: xmlschema/validators/groups.py:821
msgid ""
"Element Declarations Consistent violation between {0!r} and {1!r}: match the "
"same name but with different types"
msgstr ""
"Element Declarations Consistent violation between {0!r} and {1!r}: match the "
"same name but with different types"

#: xmlschema/validators/groups.py:835
msgid "{0!r} and {1!r} overlap and are in the same {2!r} group"
msgstr "{0!r} and {1!r} overlap and are in the same {2!r} group"

#: xmlschema/validators/groups.py:847
msgid "Unique Particle Attribution violation between {0!r} and {1!r}"
msgstr "Unique Particle Attribution violation between {0!r} and {1!r}"

#: xmlschema/validators/groups.py:860
#, python-format
msgid "substitution of %r is blocked"
msgstr "substitution of %r is blocked"

#: xmlschema/validators/groups.py:909
msgid "usage of {0!r} with type {1} is blocked by head element"
msgstr "usage of {0!r} with type {1} is blocked by head element"

#: xmlschema/validators/groups.py:934
msgid "{0!r} that matches {1!r} is not consistent with local declaration {2!r}"
msgstr ""
"{0!r} that matches {1!r} is not consistent with local declaration {2!r}"

#: xmlschema/validators/groups.py:940
msgid "Maybe a not equivalent type table between elements {0!r} and {1!r}."
msgstr "Maybe a not equivalent type table between elements {0!r} and {1!r}."

#: xmlschema/validators/groups.py:970
msgid "an empty 'choice' group with minOccurs > 0 cannot validate any content"
msgstr "an empty 'choice' group with minOccurs > 0 cannot validate any content"

#: xmlschema/validators/groups.py:982 xmlschema/validators/groups.py:1242
msgid "character data between child elements not allowed"
msgstr "character data between child elements not allowed"

#: xmlschema/validators/groups.py:995
#, python-format
msgid "XML data depth exceeded (MAX_XML_DEPTH=%r)"
msgstr "XML data depth exceeded (MAX_XML_DEPTH=%r)"

#: xmlschema/validators/groups.py:1202
msgid "{!r} does not match any declared element of the model group"
msgstr "{!r} does not match any declared element of the model group"

#: xmlschema/validators/groups.py:1205
msgid "{0} has an unknown prefix {1!r}"
msgstr "{0} has an unknown prefix {1!r}"

#: xmlschema/validators/groups.py:1238
msgid "wrong content type {!r}"
msgstr "wrong content type {!r}"

#: xmlschema/validators/groups.py:1282
msgid "maxOccurs must be (0 | 1) for 'all' model groups"
msgstr "maxOccurs must be (0 | 1) for 'all' model groups"

#: xmlschema/validators/groups.py:1311
#, python-brace-format
msgid "an xs:{0} group cannot include a reference to an xs:{1} group"
msgstr "an xs:{0} group cannot include a reference to an xs:{1} group"

#: xmlschema/validators/wildcards.py:76
#, python-format
msgid "wrong value %r in 'namespace' attribute"
msgstr "wrong value %r in 'namespace' attribute"

#: xmlschema/validators/wildcards.py:85
#, python-format
msgid "wrong value %r for 'processContents' attribute"
msgstr "wrong value %r for 'processContents' attribute"

#: xmlschema/validators/wildcards.py:94
msgid "'namespace' and 'notNamespace' attributes are mutually exclusive"
msgstr "'namespace' and 'notNamespace' attributes are mutually exclusive"

#: xmlschema/validators/wildcards.py:105
#, python-format
msgid "wrong value %r in 'notNamespace' attribute"
msgstr "wrong value %r in 'notNamespace' attribute"

#: xmlschema/validators/wildcards.py:121
msgid "wrong value for 'notQName' attribute"
msgstr "wrong value for 'notQName' attribute"

#: xmlschema/validators/wildcards.py:128
#, python-format
msgid "unmapped QName in 'notQName' attribute: %s"
msgstr "unmapped QName in 'notQName' attribute: %s"

#: xmlschema/validators/wildcards.py:132
#, python-format
msgid "wrong QName format in 'notQName' attribute: %s"
msgstr "wrong QName format in 'notQName' attribute: %s"

#: xmlschema/validators/wildcards.py:140
msgid "the namespace of each QName in notQName is allowed by notNamespace"
msgstr "the namespace of each QName in notQName is allowed by notNamespace"

#: xmlschema/validators/wildcards.py:144
msgid "names in notQName must be in namespaces that are allowed"
msgstr "names in notQName must be in namespaces that are allowed"

#: xmlschema/validators/wildcards.py:319
msgid "not expressible wildcard namespace union: {0!r} V {1!r}:"
msgstr "not expressible wildcard namespace union: {0!r} V {1!r}:"

#: xmlschema/validators/wildcards.py:473 xmlschema/validators/wildcards.py:515
msgid "element {!r} is not allowed here"
msgstr "element {!r} is not allowed here"

#: xmlschema/validators/wildcards.py:651 xmlschema/validators/wildcards.py:681
#, python-format
msgid "attribute %r not allowed"
msgstr "attribute %r not allowed"

#: xmlschema/validators/wildcards.py:663 xmlschema/validators/wildcards.py:693
#, python-format
msgid "attribute %r not found"
msgstr "attribute %r not found"

#: xmlschema/validators/wildcards.py:670 xmlschema/validators/wildcards.py:700
msgid "unavailable namespace {!r}"
msgstr "unavailable namespace {!r}"

#: xmlschema/validators/wildcards.py:857
#, python-format
msgid "wrong value %r for 'mode' attribute"
msgstr "wrong value %r for 'mode' attribute"

#: xmlschema/validators/wildcards.py:863
msgid ""
"an openContent with mode='none' cannot have an <xs:any> child declaration"
msgstr ""
"an openContent with mode='none' cannot have an <xs:any> child declaration"

#: xmlschema/validators/wildcards.py:867
msgid "an <xs:any> child declaration is required"
msgstr "an <xs:any> child declaration is required"

#: xmlschema/validators/wildcards.py:908
msgid "defaultOpenContent must be a child of the schema"
msgstr "defaultOpenContent must be a child of the schema"

#: xmlschema/validators/wildcards.py:911
msgid "the attribute 'mode' of a defaultOpenContent cannot be 'none'"
msgstr "the attribute 'mode' of a defaultOpenContent cannot be 'none'"

#: xmlschema/validators/wildcards.py:914
msgid "a defaultOpenContent declaration cannot be empty"
msgstr "a defaultOpenContent declaration cannot be empty"

#: xmlschema/validators/schemas.py:156
msgid "XSD_VERSION must be '1.0' or '1.1'"
msgstr "XSD_VERSION must be '1.0' or '1.1'"

#: xmlschema/validators/schemas.py:336
msgid "{!r} is not a valid loglevel"
msgstr "{!r} is not a valid loglevel"

#: xmlschema/validators/schemas.py:352
msgid "no XSD source provided!"
msgstr "no XSD source provided!"

#: xmlschema/validators/schemas.py:380
msgid "the attribute 'targetNamespace' cannot be an empty string"
msgstr "the attribute 'targetNamespace' cannot be an empty string"

#: xmlschema/validators/schemas.py:383
msgid "wrong namespace ({0!r} instead of {1!r}) for XSD resource {2}"
msgstr "wrong namespace ({0!r} instead of {1!r}) for XSD resource {2}"

#: xmlschema/validators/schemas.py:460
#, python-format
msgid "'global_maps' argument must be an %r instance"
msgstr "'global_maps' argument must be an %r instance"

#: xmlschema/validators/schemas.py:542
msgid "cannot change the global maps instance of a meta-schema"
msgstr "cannot change the global maps instance of a meta-schema"

#: xmlschema/validators/schemas.py:675 xmlschema/validators/schemas.py:970
#, python-format
msgid "meta-schema unavailable for %r"
msgstr "meta-schema unavailable for %r"

#: xmlschema/validators/schemas.py:682
msgid "missing XSD namespace in meta-schema"
msgstr "missing XSD namespace in meta-schema"

#: xmlschema/validators/schemas.py:754
msgid "Missing meta-schema source URL"
msgstr "Missing meta-schema source URL"

#: xmlschema/validators/schemas.py:766
msgid ""
"The argument 'base_schemas' must be a dictionary or a sequence of couples"
msgstr ""
"The argument 'base_schemas' must be a dictionary or a sequence of couples"

#: xmlschema/validators/schemas.py:803 xmlschema/validators/schemas.py:815
msgid "(restriction | list | union) expected"
msgstr "(restriction | list | union) expected"

#: xmlschema/validators/schemas.py:826
msgid "missing attribute 'name' in a global simpleType"
msgstr "missing attribute 'name' in a global simpleType"

#: xmlschema/validators/schemas.py:831
msgid "attribute 'name' not allowed for a local simpleType"
msgstr "attribute 'name' not allowed for a local simpleType"

#: xmlschema/validators/schemas.py:875
msgid "'model' argument must be (sequence | choice | all)"
msgstr "'model' argument must be (sequence | choice | all)"

#: xmlschema/validators/schemas.py:990
#, python-format
msgid "schema %r is not built"
msgstr "schema %r is not built"

#: xmlschema/validators/schemas.py:1095
msgid "the namespace {!r} is not loaded"
msgstr "the namespace {!r} is not loaded"

#: xmlschema/validators/schemas.py:1117
msgid "'converter' argument must be a {0!r} subclass or instance: {1!r}"
msgstr "'converter' argument must be a {0!r} subclass or instance: {1!r}"

#: xmlschema/validators/schemas.py:1172
msgid "cannot include schema {0!r}: {1}"
msgstr "cannot include schema {0!r}: {1}"

#: xmlschema/validators/schemas.py:1186
#, python-format
msgid "Redefine schema failed: %s"
msgstr "Redefine schema failed: %s"

#: xmlschema/validators/schemas.py:1191
msgid "cannot redefine schema {0!r}: {1}"
msgstr "cannot redefine schema {0!r}: {1}"

#: xmlschema/validators/schemas.py:1207
#, python-format
msgid "Override schema failed: %s"
msgstr "Override schema failed: %s"

#: xmlschema/validators/schemas.py:1269
msgid ""
"if the 'namespace' attribute is not present on the import statement then the "
"imported schema must have a 'targetNamespace'"
msgstr ""
"if the 'namespace' attribute is not present on the import statement then the "
"imported schema must have a 'targetNamespace'"

#: xmlschema/validators/schemas.py:1275
msgid ""
"the attribute 'namespace' must be different from schema's 'targetNamespace'"
msgstr ""
"the attribute 'namespace' must be different from schema's 'targetNamespace'"

#: xmlschema/validators/schemas.py:1322
msgid "cannot import namespace {0!r}: {1}"
msgstr "cannot import namespace {0!r}: {1}"

#: xmlschema/validators/schemas.py:1324
#, python-format
msgid "cannot import chameleon schema: %s"
msgstr "cannot import chameleon schema: %s"

#: xmlschema/validators/schemas.py:1388
msgid "imported schema {0!r} has an unmatched namespace {1!r}"
msgstr "imported schema {0!r} has an unmatched namespace {1!r}"

#: xmlschema/validators/schemas.py:1435
msgid "target directory {} is not empty"
msgstr "target directory {} is not empty"

#: xmlschema/validators/schemas.py:1438
msgid "target {} is not a directory"
msgstr "target {} is not a directory"

#: xmlschema/validators/schemas.py:1441
msgid "target parent directory {} does not exist"
msgstr "target parent directory {} does not exist"

#: xmlschema/validators/schemas.py:1444
msgid "target parent {} is not a directory"
msgstr "target parent {} is not a directory"

#: xmlschema/validators/schemas.py:1537
msgid "invalid attribute vc:minVersion value"
msgstr "invalid attribute vc:minVersion value"

#: xmlschema/validators/schemas.py:1546
msgid "invalid attribute vc:maxVersion value"
msgstr "invalid attribute vc:maxVersion value"

#: xmlschema/validators/schemas.py:1622 xmlschema/validators/schemas.py:1629
#: xmlschema/validators/schemas.py:1635
msgid "{!r} is not a valid value for xs:QName"
msgstr "{!r} is not a valid value for xs:QName"

#: xmlschema/validators/schemas.py:1641
msgid "prefix {!r} not found in namespace map"
msgstr "prefix {!r} not found in namespace map"

#: xmlschema/validators/schemas.py:1648
msgid ""
"the QName {!r} is mapped to no namespace, but this requires that there is an "
"xs:import statement in the schema without the 'namespace' attribute."
msgstr ""
"the QName {!r} is mapped to no namespace, but this requires that there is an "
"xs:import statement in the schema without the 'namespace' attribute."

#: xmlschema/validators/schemas.py:1657
msgid ""
"the QName {0!r} is mapped to the namespace {1!r}, but this namespace has not "
"an xs:import statement in the schema."
msgstr ""
"the QName {0!r} is mapped to the namespace {1!r}, but this namespace has not "
"an xs:import statement in the schema."

#: xmlschema/validators/schemas.py:1798 xmlschema/validators/schemas.py:1852
#: xmlschema/validators/schemas.py:1997
msgid "{!r} is not an element of the schema"
msgstr "{!r} is not an element of the schema"

#: xmlschema/validators/schemas.py:1826
#, python-format
msgid "IDREF %r not found in XML document"
msgstr "IDREF %r not found in XML document"

#: xmlschema/validators/schemas.py:2076
msgid "encoding needs at least one XSD element declaration"
msgstr "encoding needs at least one XSD element declaration"

#: xmlschema/validators/schemas.py:2110
#, python-format
msgid "the path %r doesn't match any element of the schema!"
msgstr "the path %r doesn't match any element of the schema!"

#: xmlschema/validators/schemas.py:2112
msgid ""
"unable to select an element for decoding data, provide a valid 'path' "
"argument."
msgstr ""
"unable to select an element for decoding data, provide a valid 'path' "
"argument."

#: xmlschema/validators/simple_types.py:133
msgid "facets not allowed for a direct derivation of xs:anySimpleType"
msgstr "facets not allowed for a direct derivation of xs:anySimpleType"

#: xmlschema/validators/simple_types.py:137
msgid "facets not allowed for a direct content derivation of xs:anySimpleType"
msgstr "facets not allowed for a direct content derivation of xs:anySimpleType"

#: xmlschema/validators/simple_types.py:143
msgid "one or more facets are not applicable, admitted set is {!r}"
msgstr "one or more facets are not applicable, admitted set is {!r}"

#: xmlschema/validators/simple_types.py:149
#, python-format
msgid "facet group must have the same base type: %r"
msgstr "facet group must have the same base type: %r"

#: xmlschema/validators/simple_types.py:159
msgid "'length' value must be non a negative integer"
msgstr "'length' value must be non a negative integer"

#: xmlschema/validators/simple_types.py:163
msgid "'minLength' value must be less than or equal to 'length'"
msgstr "'minLength' value must be less than or equal to 'length'"

#: xmlschema/validators/simple_types.py:170
msgid "cannot specify both 'length' and 'minLength'"
msgstr "cannot specify both 'length' and 'minLength'"

#: xmlschema/validators/simple_types.py:175
msgid "'maxLength' value must be greater or equal to 'length'"
msgstr "'maxLength' value must be greater or equal to 'length'"

#: xmlschema/validators/simple_types.py:183
msgid "cannot specify both 'length' and 'maxLength'"
msgstr "cannot specify both 'length' and 'maxLength'"

#: xmlschema/validators/simple_types.py:192
msgid "'minLength' value must be a non negative integer"
msgstr "'minLength' value must be a non negative integer"

#: xmlschema/validators/simple_types.py:195
msgid "'maxLength' value is less than 'minLength'"
msgstr "'maxLength' value is less than 'minLength'"

#: xmlschema/validators/simple_types.py:198
msgid "'minLength' has a lesser value than parent"
msgstr "'minLength' has a lesser value than parent"

#: xmlschema/validators/simple_types.py:201
msgid "'minLength' has a greater value than parent 'maxLength'"
msgstr "'minLength' has a greater value than parent 'maxLength'"

#: xmlschema/validators/simple_types.py:206
msgid "'maxLength' value must be a non negative integer"
msgstr "'maxLength' value must be a non negative integer"

#: xmlschema/validators/simple_types.py:209
msgid "'maxLength' has a lesser value than parent 'minLength'"
msgstr "'maxLength' has a lesser value than parent 'minLength'"

#: xmlschema/validators/simple_types.py:212
msgid "'maxLength' has a greater value than parent"
msgstr "'maxLength' has a greater value than parent"

#: xmlschema/validators/simple_types.py:223
msgid "cannot specify both 'minInclusive' and 'minExclusive'"
msgstr "cannot specify both 'minInclusive' and 'minExclusive'"

#: xmlschema/validators/simple_types.py:226
msgid "'minInclusive' must be less or equal to 'maxInclusive'"
msgstr "'minInclusive' must be less or equal to 'maxInclusive'"

#: xmlschema/validators/simple_types.py:229
msgid "'minInclusive' must be lesser than 'maxExclusive'"
msgstr "'minInclusive' must be lesser than 'maxExclusive'"

#: xmlschema/validators/simple_types.py:234
msgid "'minExclusive' must be lesser than 'maxInclusive'"
msgstr "'minExclusive' must be lesser than 'maxInclusive'"

#: xmlschema/validators/simple_types.py:237
msgid "'minExclusive' must be less or equal to 'maxExclusive'"
msgstr "'minExclusive' must be less or equal to 'maxExclusive'"

#: xmlschema/validators/simple_types.py:241
msgid "cannot specify both 'maxInclusive' and 'maxExclusive'"
msgstr "cannot specify both 'maxInclusive' and 'maxExclusive'"

#: xmlschema/validators/simple_types.py:247
msgid ""
"fractionDigits facet value cannot be lesser than the value of totalDigits "
"facet"
msgstr ""
"fractionDigits facet value cannot be lesser than the value of totalDigits "
"facet"

#: xmlschema/validators/simple_types.py:253
msgid ""
"totalDigits facet value cannot be greater than the value of the same facet "
"in the base type"
msgstr ""
"totalDigits facet value cannot be greater than the value of the same facet "
"in the base type"

#: xmlschema/validators/simple_types.py:262
#, python-format
msgid ""
"the explicitTimezone facet value cannot be changed if the base type has the "
"same facet with value %r"
msgstr ""
"the explicitTimezone facet value cannot be changed if the base type has the "
"same facet with value %r"

#: xmlschema/validators/simple_types.py:460
msgid "a {0!r} or {1!r} object required"
msgstr "a {0!r} or {1!r} object required"

#: xmlschema/validators/simple_types.py:615
msgid "value is not an instance of {!r}"
msgstr "value is not an instance of {!r}"

#: xmlschema/validators/simple_types.py:640
#: xmlschema/validators/simple_types.py:753
#: xmlschema/validators/simple_types.py:1107
msgid "invalid value {!r}"
msgstr "invalid value {!r}"

#: xmlschema/validators/simple_types.py:665
#, python-format
msgid "unmapped prefix %r in a QName"
msgstr "unmapped prefix %r in a QName"

#: xmlschema/validators/simple_types.py:699
#: xmlschema/validators/simple_types.py:711
msgid "duplicated xs:ID value {!r}"
msgstr "duplicated xs:ID value {!r}"

#: xmlschema/validators/simple_types.py:706
msgid "no more than one attribute of type ID should be present in an element"
msgstr "no more than one attribute of type ID should be present in an element"

#: xmlschema/validators/simple_types.py:731
msgid "boolean value {0!r} requires a {1!r} decoder"
msgstr "boolean value {0!r} requires a {1!r} decoder"

#: xmlschema/validators/simple_types.py:736
msgid "{0!r} is not an instance of {1!r}"
msgstr "{0!r} is not an instance of {1!r}"

#: xmlschema/validators/simple_types.py:824
#, python-format
msgid "%r: a list must be based on atomic data types"
msgstr "%r: a list must be based on atomic data types"

#: xmlschema/validators/simple_types.py:843
msgid "ambiguous list type declaration"
msgstr "ambiguous list type declaration"

#: xmlschema/validators/simple_types.py:851
msgid "missing list type declaration"
msgstr "missing list type declaration"

#: xmlschema/validators/simple_types.py:864
msgid "circular definition found for type {!r}"
msgstr "circular definition found for type {!r}"

#: xmlschema/validators/simple_types.py:869
#, python-format
msgid "'final' value of the itemType %r forbids derivation by list"
msgstr "'final' value of the itemType %r forbids derivation by list"

#: xmlschema/validators/simple_types.py:873
#: xmlschema/validators/simple_types.py:1048
#: xmlschema/validators/simple_types.py:1335
msgid "cannot use xs:anyAtomicType as base type of a user-defined type"
msgstr "cannot use xs:anyAtomicType as base type of a user-defined type"

#: xmlschema/validators/simple_types.py:996
#, python-format
msgid "wrong value %r for attribute 'white_space'"
msgstr "wrong value %r for attribute 'white_space'"

#: xmlschema/validators/simple_types.py:1031
msgid "circular definition found on xs:union type {!r}"
msgstr "circular definition found on xs:union type {!r}"

#: xmlschema/validators/simple_types.py:1035
msgid "a {0!r} required, not {1!r}"
msgstr "a {0!r} required, not {1!r}"

#: xmlschema/validators/simple_types.py:1039
#, python-format
msgid "'final' value of the memberTypes %r forbids derivation by union"
msgstr "'final' value of the memberTypes %r forbids derivation by union"

#: xmlschema/validators/simple_types.py:1045
msgid "missing xs:union type declarations"
msgstr "missing xs:union type declarations"

#: xmlschema/validators/simple_types.py:1128
#, python-format
msgid "no type suitable for decoding the values %r"
msgstr "no type suitable for decoding the values %r"

#: xmlschema/validators/simple_types.py:1162
msgid "no type suitable for encoding the object"
msgstr "no type suitable for encoding the object"

#: xmlschema/validators/simple_types.py:1210
msgid "'name' attribute in a local simpleType definition"
msgstr "'name' attribute in a local simpleType definition"

#: xmlschema/validators/simple_types.py:1252
#, python-format
msgid "wrong base type %r, an atomic type required"
msgstr "wrong base type %r, an atomic type required"

#: xmlschema/validators/simple_types.py:1258
msgid "an xs:simpleType definition expected"
msgstr "an xs:simpleType definition expected"

#: xmlschema/validators/simple_types.py:1263
msgid ""
"when a complexType with simpleContent restricts a complexType with mixed and "
"with emptiable content then a simpleType child declaration is required"
msgstr ""
"when a complexType with simpleContent restricts a complexType with mixed and "
"with emptiable content then a simpleType child declaration is required"

#: xmlschema/validators/simple_types.py:1268
#, python-format
msgid "simpleType restriction of %r is not allowed"
msgstr "simpleType restriction of %r is not allowed"

#: xmlschema/validators/simple_types.py:1277
msgid "unexpected tag after attribute declarations"
msgstr "unexpected tag after attribute declarations"

#: xmlschema/validators/simple_types.py:1282
msgid "duplicated simpleType declaration"
msgstr "duplicated simpleType declaration"

#: xmlschema/validators/simple_types.py:1304
msgid "restriction with 'base' attribute and simpleType declaration"
msgstr "restriction with 'base' attribute and simpleType declaration"

#: xmlschema/validators/simple_types.py:1312
#, python-format
msgid "unexpected tag %r in restriction"
msgstr "unexpected tag %r in restriction"

#: xmlschema/validators/simple_types.py:1318
#, python-format
msgid "multiple %r constraint facet"
msgstr "multiple %r constraint facet"

#: xmlschema/validators/simple_types.py:1330
msgid "missing base type in restriction"
msgstr "missing base type in restriction"

#: xmlschema/validators/simple_types.py:1332
#, python-format
msgid "'final' value of the baseType %r forbids derivation by restriction"
msgstr "'final' value of the baseType %r forbids derivation by restriction"

#: xmlschema/validators/simple_types.py:1381
#: xmlschema/validators/simple_types.py:1430
#, python-format
msgid ""
"wrong base type %r: a simpleType or a complexType with simple or mixed "
"content required"
msgstr ""
"wrong base type %r: a simpleType or a complexType with simple or mixed "
"content required"

#: xmlschema/validators/identities.py:86
msgid "'xpath' attribute required"
msgstr "'xpath' attribute required"

#: xmlschema/validators/identities.py:98
msgid "invalid XPath expression for an {}"
msgstr "invalid XPath expression for an {}"

#: xmlschema/validators/identities.py:182
msgid "missing required attribute 'name'"
msgstr "missing required attribute 'name'"

#: xmlschema/validators/identities.py:190
msgid "missing 'selector' declaration"
msgstr "missing 'selector' declaration"

#: xmlschema/validators/identities.py:202
msgid "unknown identity constraint {!r}"
msgstr "unknown identity constraint {!r}"

#: xmlschema/validators/identities.py:207
msgid "attribute 'ref' points to a different kind constraint"
msgstr "attribute 'ref' points to a different kind constraint"

#: xmlschema/validators/identities.py:296
msgid "missing key field {0!r} for {1!r}"
msgstr "missing key field {0!r} for {1!r}"

#: xmlschema/validators/identities.py:304
#, python-format
msgid "%r field doesn't have a simple type!"
msgstr "%r field doesn't have a simple type!"

#: xmlschema/validators/identities.py:325
#, python-format
msgid "%r field selects multiple values!"
msgstr "%r field selects multiple values!"

#: xmlschema/validators/identities.py:359
msgid "missing required attribute 'refer'"
msgstr "missing required attribute 'refer'"

#: xmlschema/validators/identities.py:381
#, python-format
msgid "key/unique identity constraint %r is missing"
msgstr "key/unique identity constraint %r is missing"

#: xmlschema/validators/identities.py:386
#, python-format
msgid "reference to a non key/unique identity constraint %r"
msgstr "reference to a non key/unique identity constraint %r"

#: xmlschema/validators/identities.py:389
msgid "field cardinality mismatch between {0!r} and {1!r}"
msgstr "field cardinality mismatch between {0!r} and {1!r}"

#: xmlschema/validators/identities.py:459
msgid "duplicated value {0!r} for {1!r}"
msgstr "duplicated value {0!r} for {1!r}"

#: xmlschema/validators/xsdbase.py:51
#, python-format
msgid "validation mode can be 'strict', 'lax' or 'skip': %r"
msgstr "validation mode can be 'strict', 'lax' or 'skip': %r"

#: xmlschema/validators/xsdbase.py:254
msgid ""
"wrong value {0!r} for 'xpathDefaultNamespace' attribute, can be (anyURI | "
"{1})."
msgstr ""
"wrong value {0!r} for 'xpathDefaultNamespace' attribute, can be (anyURI | "
"{1})."

#: xmlschema/validators/xsdbase.py:405
#, python-format
msgid "missing attribute 'name' in a global %r"
msgstr "missing attribute 'name' in a global %r"

#: xmlschema/validators/xsdbase.py:408
#, python-format
msgid "missing both attributes 'name' and 'ref' in local %r"
msgstr "missing both attributes 'name' and 'ref' in local %r"

#: xmlschema/validators/xsdbase.py:411
msgid "attributes 'name' and 'ref' are mutually exclusive"
msgstr "attributes 'name' and 'ref' are mutually exclusive"

#: xmlschema/validators/xsdbase.py:414
#, python-format
msgid "attribute 'ref' not allowed in a global %r"
msgstr "attribute 'ref' not allowed in a global %r"

#: xmlschema/validators/xsdbase.py:423
msgid "a reference component cannot have child definitions/declarations"
msgstr "a reference component cannot have child definitions/declarations"

#: xmlschema/validators/xsdbase.py:438
msgid "too many XSD components, unexpected {0!r} found at position {1}"
msgstr "too many XSD components, unexpected {0!r} found at position {1}"

#: xmlschema/validators/xsdbase.py:454
msgid ""
"attribute 'name' must be present when 'targetNamespace' attribute is provided"
msgstr ""
"attribute 'name' must be present when 'targetNamespace' attribute is provided"

#: xmlschema/validators/xsdbase.py:458
msgid ""
"attribute 'form' must be absent when 'targetNamespace' attribute is provided"
msgstr ""
"attribute 'form' must be absent when 'targetNamespace' attribute is provided"

#: xmlschema/validators/xsdbase.py:463
#, python-format
msgid "a global %s must have the same namespace as its parent schema"
msgstr "a global %s must have the same namespace as its parent schema"

#: xmlschema/validators/xsdbase.py:471
msgid ""
"a declaration contained in a global complexType must have the same namespace "
"as its parent schema"
msgstr ""
"a declaration contained in a global complexType must have the same namespace "
"as its parent schema"

#: xmlschema/validators/xsdbase.py:591
msgid "parent circularity from {}"
msgstr "parent circularity from {}"

#: xmlschema/validators/helpers.py:44
#, python-format
msgid "wrong value %r for attribute %r"
msgstr "wrong value %r for attribute %r"

#: xmlschema/validators/helpers.py:59
msgid "value is not a valid xs:decimal"
msgstr "value is not a valid xs:decimal"

#: xmlschema/validators/helpers.py:65
msgid "value is not an xs:QName"
msgstr "value is not an xs:QName"

#: xmlschema/validators/helpers.py:71 xmlschema/validators/helpers.py:77
#: xmlschema/validators/helpers.py:83 xmlschema/validators/helpers.py:89
#: xmlschema/validators/helpers.py:95 xmlschema/validators/helpers.py:101
#: xmlschema/validators/helpers.py:107 xmlschema/validators/helpers.py:113
msgid "value must be {:s}"
msgstr "value must be {:s}"

#: xmlschema/validators/helpers.py:119
msgid "value must be negative"
msgstr "value must be negative"

#: xmlschema/validators/helpers.py:125
msgid "value must be positive"
msgstr "value must be positive"

#: xmlschema/validators/helpers.py:131
msgid "value must be non positive"
msgstr "value must be non positive"

#: xmlschema/validators/helpers.py:137
msgid "value must be non negative"
msgstr "value must be non negative"

#: xmlschema/validators/helpers.py:144
msgid "not an hexadecimal number"
msgstr "not an hexadecimal number"

#: xmlschema/validators/helpers.py:157
msgid "not a base64 encoding"
msgstr "not a base64 encoding"

#: xmlschema/validators/helpers.py:162
msgid "no value is allowed for xs:error type"
msgstr "no value is allowed for xs:error type"

#: xmlschema/validators/helpers.py:174
msgid "{!r} is not a boolean value"
msgstr "{!r} is not a boolean value"
